<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="common.sysmodule.data.SysRoleMapper">


<select id="getSysRoleList" parameterType="map" resultType="common.sysmodule.model.SysRole">
	select
		t_sys_role.role_id,
		t_sys_role.role_name,
		t_sys_role.role_desc,
		t_sys_role.order_seq,
		t_sys_role.role_type,
		t_sys_role.is_enable
	from
		t_sys_role
	where 1=1
	<if test="is_enable!=null">
		and is_enable=#{is_enable}
	</if>
	<if test="hasAD=='false'">
   		and role_name !='admin'
   	</if>
   	<if test="role_type!=null">
   		and role_type=#{role_type}
   	</if>
</select>
<insert id="addSysRole" parameterType="common.sysmodule.model.SysRole">
	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="role_id" >
       SELECT LAST_INSERT_ID()
    </selectKey>
	insert into t_sys_role
	(
		role_name,
		role_desc,
		order_seq,
		role_type
	)
	values
	(
		#{role_name},
		#{role_desc},
		#{order_seq},
		#{role_type}
	)
</insert>
<update id="updateSysRole" parameterType="common.sysmodule.model.SysRole">
	update t_sys_role
		set
			role_id = #{role_id},
			role_name = #{role_name},
			role_desc = #{role_desc},
			order_seq = #{order_seq},
			is_enable = #{is_enable},
			role_type=#{role_type}
		where role_id = #{role_id}
</update>
<delete id="deleteSysRole" parameterType="common.sysmodule.model.SysRole">
	delete from t_sys_role
	where role_id = #{role_id}
</delete>

<select id="getCountForRole_name" parameterType="map" resultType="java.lang.Integer">
	select count(*) from t_sys_role where role_name = #{role_name} and role_id != #{role_id}
</select>
<select id="getSysRoleAuthorityList" parameterType="map" resultType="common.sysmodule.model.SysRoleAuthority">
	select
		t_sys_role_authority.ra_id,
		t_sys_role_authority.role_id,
		t_sys_role_authority.class_id
	from
		t_sys_role_authority
	where 1=1
	<if test="role_id!=null and role_id!=''">
      and t_sys_role_authority.role_id = #{role_id}
    </if>
</select>
<insert id="addSysRoleAuthority" parameterType="common.sysmodule.model.SysRoleAuthority">
	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="ra_id" >
       SELECT LAST_INSERT_ID()
    </selectKey>
	insert into t_sys_role_authority
	(
		
		role_id,
		class_id
	)
	values
	(
		
		#{role_id},
		#{class_id}
	)
</insert>
<update id="updateSysRoleAuthority" parameterType="common.sysmodule.model.SysRoleAuthority">
	update t_sys_role_authority
		set
			ra_id = #{ra_id},
			role_id = #{role_id},
			class_id = #{class_id}
		where ra_id = #{ra_id}
</update>
<delete id="deleteSysRoleAuthority" parameterType="common.sysmodule.model.SysRoleAuthority">
	delete from t_sys_role_authority
	where ra_id = #{ra_id}
</delete>
<select id="getVisitorPage" parameterType="map" resultType="java.lang.String">
	select page_path from t_sys_page_authority
	left join t_sys_function_class on t_sys_function_class.class_id=t_sys_page_authority.class_id
	where t_sys_function_class.isvalid='true' 
	and t_sys_page_authority.enable='true'
	and t_sys_function_class.class_id in
	(
		select class_id from t_sys_role_authority
		left join t_sys_role on  t_sys_role.role_id=t_sys_role_authority.role_id
		where t_sys_role.role_name='visitor'
	)
	
</select>

<select id="getUrlListByRole_id" parameterType="map" resultType="java.lang.String">
	 <!--  select 
		page_path 
	from 
		t_sys_page_authority
	left join 
		t_sys_function_class 
		on 
		t_sys_function_class.class_id = t_sys_page_authority.class_id
	where 
		t_sys_function_class.isvalid = 'true' 
	and 
		t_sys_page_authority.enable = 'true'
	and 
		t_sys_function_class.class_id in
		(
			select 
				class_id 
			from 
				t_sys_role_authority
			where 
				t_sys_role_authority.role_id = #{role_id}
		)
	-->
	 SELECT page_path from t_sys_page_authority where authority_id in (SELECT authority_id from t_sys_role_page where FIND_IN_SET(role_id,#{role_id}))
</select>
<!-- 获取角色功能授权 -->
<select id="getCountForRoleFuncAuth" parameterType="map" resultType="java.lang.Integer">
SELECT COUNT(*) from (
SELECT t_sys_role_page_func.role_id,t_sys_role_page_func.f_id, t_sys_page_func.`name` as func_name,t_sys_page_func.`code` as func_code,t_sys_page_authority.authority_id,t_sys_page_authority.page_name,t_sys_page_authority.page_path
from t_sys_role_page_func 
LEFT JOIN t_sys_page_func on t_sys_role_page_func.f_id=t_sys_page_func.f_id
LEFT JOIN t_sys_page_authority ON t_sys_page_func.authority_id=t_sys_page_authority.authority_id) as t
where FIND_IN_SET(t.role_id,#{role_id}) and t.page_path=#{page_path} and t.func_code=#{func_code}
</select>
<!-- 获取角色页面授权 -->
<select id="getCountForRolePageAuth" parameterType="map" resultType="java.lang.Integer">
SELECT COUNT(*) FROM (
SELECT t_sys_role_page.rp_id,t_sys_role_page.role_id,t_sys_role_page.authority_id,t_sys_page_authority.page_path 
from t_sys_role_page 
LEFT JOIN t_sys_page_authority on t_sys_page_authority.authority_id=t_sys_role_page.authority_id
) as tpage
WHERE  FIND_IN_SET(tpage.role_id,#{role_id}) and tpage.page_path=#{page_path}
</select>


<select id="getSysRoleByName" parameterType="map" resultType="common.sysmodule.model.SysRole">
	select *
	from
		t_sys_role
	where role_name=#{role_name}
</select>

<!-- 角色与页面功能关联表开始 -->
<select id="getSysRolePageFuncList" parameterType="map" resultType="common.sysmodule.model.SysRolePageFunc">
	select
		t_sys_role_page_func.rf_id,
		t_sys_role_page_func.role_id,
		t_sys_role_page_func.f_id
	from
		t_sys_role_page_func
		where 1=1
	<if test="role_id!=null and role_id!=''">
      and t_sys_role_page_func.role_id = #{role_id}
    </if>
</select>
<insert id="addSysRolePageFunc" parameterType="common.sysmodule.model.SysRolePageFunc">
	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="rf_id" >
       SELECT LAST_INSERT_ID()
    </selectKey>
	insert into t_sys_role_page_func
	(
		role_id,
		f_id
	)
	values
	(
		#{role_id},
		#{f_id}
	)
</insert>
<update id="updateSysRolePageFunc" parameterType="common.sysmodule.model.SysRolePageFunc">
	update t_sys_role_page_func
		set
			rf_id = #{rf_id},
			role_id = #{role_id},
			f_id = #{f_id}
		where rf_id = #{rf_id}
</update>
<delete id="deleteSysRolePageFunc" parameterType="common.sysmodule.model.SysRolePageFunc">
	delete from t_sys_role_page_func
	where rf_id = #{rf_id}
</delete>
<!-- 角色与页面功能关联表结束-->
<!-- 角色与页面关联表开始 -->
<select id="getSysRolePageList" parameterType="map" resultType="common.sysmodule.model.SysRolePage">
	select
		t_sys_role_page.rp_id,
		t_sys_role_page.role_id,
		t_sys_role_page.authority_id
	from
		t_sys_role_page
	where 1=1
	<if test="role_id!=null and role_id!=''">
      and t_sys_role_page.role_id = #{role_id}
    </if>
</select>
<insert id="addSysRolePage" parameterType="common.sysmodule.model.SysRolePage">
	<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="rp_id" >
       SELECT LAST_INSERT_ID()
    </selectKey>
	insert into t_sys_role_page
	(
		role_id,
		authority_id
	)
	values
	(
		#{role_id},
		#{authority_id}
	)
</insert>
<update id="updateSysRolePage" parameterType="common.sysmodule.model.SysRolePage">
	update t_sys_role_page
		set
			rp_id = #{rp_id},
			role_id = #{role_id},
			authority_id = #{authority_id}
		where rp_id = #{rp_id}
</update>
<delete id="deleteSysRolePage" parameterType="common.sysmodule.model.SysRolePage">
	delete from t_sys_role_page
	where rp_id = #{rp_id}
</delete>
<!-- 角色与页面关联表结束 -->

<!-- 查询主账号的角色Id -->
<select id="getMainAccountRole" parameterType="map" resultType="Integer">
	select
		role_id
	from
		t_app_reg_accout
	where 
		reg_id = #{accountId}
</select>

<!-- 根据登录账号的role_id查询所有class_id -->
<select id="getAllClassIdByRoleId" parameterType="map" resultType="Integer">
	select
		t_sys_role_authority.class_id
	from
		t_sys_role_authority
	where 
     FIND_IN_SET(role_id,#{roleIds}) 
</select>

<update id="updateRoleStatus" parameterType="map">
	update t_sys_role
		set
			role_id = #{role_id},
			is_enable = #{is_enable}
		where role_id = #{role_id}
</update>
</mapper>
